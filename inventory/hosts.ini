#SLICES webshell
[webshell]
localhost ansible_connection=local

#Deployement nodes (reachable only through the SLICES Webshell)
##Role based groups. Only put one per group and keep the variables to their respective node when switching roles.
[core_node]
###condidered as k8s master node
#sopnode-f1 ansible_user=root nic_interface=ens2f1 ip=172.28.2.76 storage=sda1
sopnode-f2 ansible_user=root nic_interface=ens2f1np1 ip=172.28.2.77 storage=sda1
#sopnode-f3 ansible_user=root nic_interface=ens15f1 ip=172.28.2.95 storage=sdb1

[ran_node]
#sopnode-f1 ansible_user=root nic_interface=ens2f1 ip=172.28.2.76 storage=sda1
sopnode-f2 ansible_user=root nic_interface=ens2f1np1 ip=172.28.2.77 storage=sda1
#sopnode-f3 ansible_user=root nic_interface=ens15f1 ip=172.28.2.95 storage=sdb1

[monitor_node]
#sopnode-f1 ansible_user=root nic_interface=ens2f1 ip=172.28.2.76 storage=sda1
sopnode-f2 ansible_user=root nic_interface=ens2f1np1 ip=172.28.2.77 storage=sda1
#sopnode-f3 ansible_user=root nic_interface=ens15f1 ip=172.28.2.95 storage=sdb1
#sopnode-w3 ansible_user=root nic_interface=enp59s0f1np1 ip=172.28.2.71 storage=sda1 #not tested yet!

#R2Lab
##Faraday jump-host
#interference usrp can be fit(second fit node), n300 or n320) g is tha gain in db and s is the sample rate or the covered bandwidth by the noise generator in Hz
[faraday]
faraday.inria.fr ansible_user=inria_ubinet01 rru=jaguar interference_usrp=n320 freq=3411.22M g=110 s=20M conf=gnb.sa.band78.133prb.aw2s.dddsu.50MHz.conf
#faraday.inria.fr ansible_user=inria_ubinet01 rru=jaguar interference_usrp=n320 freq=3411.22M g=110 s=20M conf=gnb.sa.band78.51prb.aw2s.ddsuu.20MHz.conf
#faraday.inria.fr ansible_user=inria_ubinet01 rru=panther interference_usrp=n320 freq=3411.22M g=110 g=110 s=20M conf=gnb.sa.band78.51prb.aw2s.ddsuu.20MHz.conf
#faraday.inria.fr ansible_user=inria_ubinet01 rru=n300 interference_usrp=n320 freq=3521.20M g=110 g=110 s=20M conf=gnb.sa.band78.106prb.n310.7ds2u.conf
#faraday.inria.fr ansible_user=inria_ubinet01 rru=n320 interference_usrp=n300 freq=3521.20M g=110 g=110 s=20M conf=gnb.sa.band78.106prb.n310.7ds2u.conf

##Quectel UEs (reachable only through Faraday)
[qhats]
qhat01 ansible_host=qhat01 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' mode=mbim dnn=internet upf_ip=10.41.0.1
#qhat02 ansible_host=qhat02 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' mode=mbim dnn=streaming upf_ip=10.42.0.1
#qhat03 ansible_host=qhat03 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' mode=mbim dnn=internet upf_ip=10.41.0.1
#qhat10 ansible_host=qhat10 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' mode=mbim dnn=streaming upf_ip=10.42.0.1
#qhat11 ansible_host=qhat11 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' mode=mbim dnn=streaming upf_ip=10.42.0.1
# qmi is not tested and will not work!
#qhat20 ansible_host=qhat20 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' mode=qmi dnn=streaming upf_ip=10.42.0.1
#qhat21 ansible_host=qhat21 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' mode=qmi dnn=internet upf_ip=10.41.0.1
#qhat22 ansible_host=qhat22 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' mode=qmi dnn=streaming upf_ip=10.42.0.1
#qhat23 ansible_host=qhat23 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' mode=qmi dnn=internet upf_ip=10.41.0.1

##Fit Nodes used for the interference scenario (first one is used for spectrum visualization)
[fit_nodes]
fit02 ansible_host=fit02 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' fit_number=2 fit_usrp=b210
#fit08 ansible_host=fit08 ansible_user=root ansible_ssh_common_args='-o ProxyJump=inria_ubinet01@faraday.inria.fr' fit_number=8 fit_usrp=b205

# Group aliases
[sopnodes:children]
core_node
ran_node
monitor_node

[k8s_workers:children]
ran_node
monitor_node

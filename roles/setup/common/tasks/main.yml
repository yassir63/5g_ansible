---
- name: Ensure required apt packages are installed
  apt:
    name:
      - vim
      - tmux
      - git
      - curl
      - iproute2
      - iputils-ping
      - iperf3
      - tcpdump
      - python3-pip
      - jq
      - nano
      - python3-virtualenv
    state: present
    update_cache: yes


- name: Disable swap
  shell: |
    swapoff -a
    sed -i.bak '/ swap / s/^/#/' /etc/fstab
  become: true

- name: Load kernel modules for Kubernetes networking
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter
  become: true

- name: Ensure kernel modules are loaded on boot
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
  become: true

- name: Set sysctl parameters for Kubernetes networking
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1
  become: true

- name: Apply sysctl parameters
  command: sysctl --system
  become: true


- name: Download and run k9s webinstall script
  ansible.builtin.shell: |
    curl -sS https://webinstall.dev/k9s | bash
  args:
    executable: /bin/bash
  environment:
    # In case HOME is not passed when using become
    HOME: "{{ ansible_env.HOME | default('/root') }}"
  register: k9s_install
  changed_when: "'k9s' in k9s_install.stdout or k9s_install.rc == 0"

- name: Source envman PATH.env (makes k9s available in PATH for future sessions)
  ansible.builtin.shell: |
    source ~/.config/envman/PATH.env
  args:
    executable: /bin/bash
  environment:
    HOME: "{{ ansible_env.HOME | default('/root') }}"
  changed_when: false
